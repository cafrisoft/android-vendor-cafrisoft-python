from TModule.Device import *

JOBID=100  #Job ID
SCID=101   #시나리오 ID
TCID=1

def TC1_Start(device) : 
    device.Vlin1AdcSetSamples(32)
    device.VciAdcSetSamples(32)

#TC1-1 RESET
def TC1_1(device) :
    print("-------------------------------------------------")
    print("TC1_1 : RESET")
    print("-------------------------------------------------")
    #HWReset Low
    device.DD_set_fb0_blank(1)         #echo 1 >  /sys/class/graphics/fb0/blank    화면 ON상태에서 BlankMode진입
    device.DD_set_dsim_manual_ctrl(1)  #echo 1 > /sys/devices/platform/12870000.dsim/manual_ctrl    Manual Mode 1 (Reset) 설정
    device.DD_set_fb0_blank(0)         #echo 0 >  /sys/class/graphics/fb0/blank    Unblank 호출 (Manual Mode 번호에 따라 단계적으로 Wakeup됨)
    #Meausre
    measureRes = device.DataAcqMeasureADC(JOBID, SCID, TCID, 1, "TC1_1 : RESET")
    measureRes.Print()
    print("");
    print("");

#TC1-2 Sleep In
def TC1_2(device) : 
    print("-------------------------------------------------")
    print("TC1_2 : Sleep in")
    print("-------------------------------------------------")
    #HWReset High
    device.DD_set_dsim_manual_ctrl(2)  #echo 2 > /sys/devices/platform/12870000.dsim/manual_ctrl    Manual Mode 2 (Sleep in) 설정
    device.DD_set_fb0_blank(0)         #echo 0 >  /sys/class/graphics/fb0/blank    Unblank 호출해서 Sleep-In상태까지 WakeUp
    #Meausre
    measureRes = device.DataAcqMeasureADC(JOBID, SCID, TCID, 2, "TC1_2 : Sleep in")
    measureRes.Print()
    print("");
    print("");

#TC1-3 Deep Standby
def TC1_3(device) : 
    print("-------------------------------------------------")
    print("TC1_3 : Deep Standby")
    print("-------------------------------------------------")
    #AP Control
    device.WREG0_05(0xD9)         #echo "write 0x05 0xD9" > /sys/devices/platform/12870000.dsim/mipi_rw
    #Measure
    measureRes = device.DataAcqMeasureADC(JOBID, SCID, TCID, 3, "TC1_3 : Deep Standby")
    measureRes.Print()
    print("");
    print("");

#TC1-4 IdleMode @ Sleep IN
def TC1_4(device) : 
    print("-------------------------------------------------")
    print("TC1_4 : IdleMode @ Sleep IN")
    print("-------------------------------------------------")
    #HW Reset Low
    device.DD_set_dsim_manual_ctrl(3)  #echo 3 > /sys/devices/platform/12870000.dsim/manual_ctrl    Manual Mode 3 (Deep Standby OUT) 설정
    #DELAYMS=10
    device.DelayMS(10)
    #HW Reset High
    #DELAYMS=50
    device.DelayMS(50)
    #WREG0=0x05,0x39
    device.WREG0_05(0x39)                #echo "write 0x05 0x39" > /sys/devices/platform/12870000.dsim/mipi_rw
    #Measure
    measureRes = device.DataAcqMeasureADC(JOBID, SCID, TCID, 4, "TC1_4 : IdleMode @ Sleep IN")
    measureRes.Print()
    print("");
    print("");

#TC1-5 Idle Mode @ SleepOut 
def TC1_5(device) : 
    print("-------------------------------------------------")
    print("TC1_5 : Idle Mode @ SleepOut ")
    print("-------------------------------------------------")
    #APControl
    device.WREG0_05(0x11)                #echo "write 0x05 0x11" > /sys/devices/platform/12870000.dsim/mipi_rw  MIPI명령어로 Sleep Out
    #Measure
    measureRes = device.DataAcqMeasureADC(JOBID, SCID, TCID, 5, "TC1_5 : Idle Mode @ SleepOut")
    measureRes.Print()
    print("");
    print("");


#TC1-6 Sleep OUT
def TC1_6(device) : 
    print("-------------------------------------------------")
    print("TC1_6 : Sleep Out")
    print("-------------------------------------------------")
    #APControl 
    device.WREG0_05(0x38)                #echo "write 0x05 0x38" > /sys/devices/platform/12870000.dsim/mipi_rw  MIPI명령어로 Idle Mode OUT
    #DELAYMS=120
    device.DelayMS(120)
    #Measure
    measureRes = device.DataAcqMeasureADC(JOBID, SCID, TCID, 6, "TC1_6 : Sleep Out")
    measureRes.Print()
    print("");
    print("");


#TC1-7 Display OUT(Black)
def TC1_7(device) : 
    print("-------------------------------------------------")
    print("TC1_7 : Display OUT(Black)")
    print("-------------------------------------------------")
    #TC1-6 완료후에,
    #1) Manual Mode 4 (Display Out) 설정
    device.DD_set_dsim_manual_ctrl(4)  #echo 4 > /sys/devices/platform/12870000.dsim/manual_ctrl
    #2) Unblank 호출해서 DSIM, DECON 초기화 및 화면 출력 (아래 Initial code는 드라이버에 정의된 MIPI command list가 전다됨)
    device.DD_set_fb0_blank(0)         #echo 0 >  /sys/class/graphics/fb0/blank    
    #APControl
    #WREG0 = 0x39, 0xF0, 0x5A, 0x5A ; Level 2 key ON
    wregList=[0x5A, 0x5A]; device.WREG0_39(0xF0, wregList)  
    #WREG0 = 0x39, 0xFC, 0x5A, 0x5A ; Level 3 key ON
    wregList=[0x5A, 0x5A]; device.WREG0_39(0xFC, wregList)  
    #WREG0  = 0x39,0xE6,0x09,0x55,0xAA,0xAA,0x55,0x55,0x55,0x64,0xA4,0x69,0x04,0x87,0x54,0xD4,0x37,0xAB,0xB7,0x00,0xFF,0xFF,0xFF,0xFF,0x13,0x13,0x00,0x23,0x16,0x00,0xFF,0x00,0x00,0x10,0x10,0x10,0x10,0x10
    wregList=[0x09,0x55,0xAA,0xAA,0x55,0x55,0x55,0x64,0xA4,0x69,0x04,0x87,0x54,0xD4,0x37,0xAB,0xB7,0x00,0xFF,0xFF,0xFF,0xFF,0x13,0x13,0x00,0x23,0x16,0x00,0xFF,0x00,0x00,0x10,0x10,0x10,0x10,0x10]
    device.WREG0_39(0xE6, wregList)
    #DELAYMS  = 500
    device.DelayMS(500)
    #WREG0  = 0x07, 0x01
    device.WREG0_07(0x01)
    #WREG0  = 0x39, 0x9E, 0x11,0x00,0x00,0x89,0x30,0x80,0x0C,0x60,0x05,0xA0,0x00,0x18,0x02,0xD0,0x02,0xD0,0x02,0x00,0x02,0x86,0x00,0x20,0x02,0x83,0x00,0x0A,0x00,0x0D,0x04,0x86,0x03,0x2E,0x18,0x00,0x10,0xF0,0x03,0x0C,0x20,0x00,0x06,0x0B,0x0B,0x33,0x0E,0x1C,0x2A,0x38,0x46,0x54,0x62,0x69,0x70,0x77,0x79,0x7B,0x7D,0x7E,0x01,0x02,0x01,0x00,0x09,0x40,0x09,0xBE,0x19,0xFC,0x19,0xFA,0x19,0xF8,0x1A,0x38,0x1A,0x78,0x1A,0xB6,0x2A,0xB6,0x2A,0xF4,0x2A,0xF4,0x4B,0x34,0x63,0x74 ; 678UW01 - 190903
    wregList=[0x11,0x00,0x00,0x89,0x30,0x80,0x0C,0x60,0x05,0xA0,0x00,0x18,0x02,0xD0,0x02,0xD0,0x02,0x00,0x02,0x86,0x00,0x20,0x02,0x83,0x00,0x0A,0x00,0x0D,0x04,0x86,0x03,0x2E,0x18,0x00,0x10,0xF0,0x03,0x0C,0x20,0x00,0x06,0x0B,0x0B,0x33,0x0E,0x1C,0x2A,0x38,0x46,0x54,0x62,0x69,0x70,0x77,0x79,0x7B,0x7D,0x7E,0x01,0x02,0x01,0x00,0x09,0x40,0x09,0xBE,0x19,0xFC,0x19,0xFA,0x19,0xF8,0x1A,0x38,0x1A,0x78,0x1A,0xB6,0x2A,0xB6,0x2A,0xF4,0x2A,0xF4,0x4B,0x34,0x63,0x74]
    device.WREG0_39(0x9E, wregList)
    #WREG0  = 0x15, 0xF7, 0X0F
    device.WREG0_15(0xF7, 0x0F)
    #DELAYMS = 100
    device.DelayMS(100)
    #WREG0 = 0x39, 0x60, 0x20 ; Frame_rate 120Hz(0X00=60Hz, 0X20=120Hz)
    wregList=[0x20]
    device.WREG0_39(0x60, wregList)
    #WREG0 = 0x39, 0xF7, 0x0F
    wregList=[0x0F]
    device.WREG0_39(0xF7, wregList)
    #WREG0 = 0x39, 0x51, 0x03, 0xFF
    wregList=[0x03, 0xFF]
    device.WREG0_39(0x51, wregList)
    #WREG0 = 0x39, 0x53, 0x20
    wregList=[0x20]
    device.WREG0_39(0x53, wregList)
    #DELAYMS  = 5
    device.DelayMS(5)
    #WREG0  = 0x39, 0x35, 0x00 ; TE_ON
    wregList=[0x00]
    device.WREG0_39(0x35, wregList)
    #DSI_HSLP = HS
    #PTRN_SET = PAINT, 0x00000000
    device.PTRN_SET("PAINT,0x00000000")
    #PTRN_SET = Write, 0
    device.PTRN_SET("Write, 0")
    #WREG0  = 0x05, 0x29
    device.WREG0_05(0x29)
    #Measure
    measureRes = device.DataAcqMeasureADC(JOBID, SCID, TCID, 7, "TC1_7 : Sleep Out") 
    measureRes.Print()
    print("");
    print("");


def TC1_End(device) : 
    #모든 테스트 완료후에 Manual Mode를 0으로 다시 초기화
    device.DD_set_dsim_manual_ctrl(0)  #echo 0 > /sys/devices/platform/12870000.dsim/manual_ctrl

    
def main(argv) : 
    #device create&connect
    print("----------------------------------------------")
    print("TESys, TC1")
    print("----------------------------------------------")
    device = TDevice(TDevice.Type.TESys)
    print("Connect To " + device.GetName() )
    device.SetServerIPAddr("192.168.100.200")  #Board에서 실행시, ServerAddr주소는 아무값이나 넣어도 상관없슴
    #device.SetServerIPAddr("192.168.100.1")  #Board에서 실행시, ServerAddr주소는 아무값이나 넣어도 상관없슴
    isConnect = device.Connect()
    assert isConnect 
        
    TC1_Start(device)

    TC1_1(device)  #RESET
    TC1_2(device)  #Sleep In
    TC1_3(device)  #Deep Standby
    TC1_4(device)  #Idle mode @ Sleep In
    TC1_5(device)  #Idle mode @ Sleep Out
    TC1_6(device)  #Sleep Out
    TC1_7(device)  #Display ON(Black)

    TC1_End(device)  #모든 테스트 완료후에 Manual Mode를 0으로 다시 초기화

    #Disconnect
    print("Disconnect from " + device.GetName() )
    device.Disonnect()
    print("End of Exam. Bye!!")
    print()

if __name__ == "__main__" :
    main(sys.argv)


