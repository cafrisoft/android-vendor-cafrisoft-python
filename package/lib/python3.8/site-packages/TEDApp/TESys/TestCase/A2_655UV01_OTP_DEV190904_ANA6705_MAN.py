from TModule.Device import *

IF_STATE=[-1 for _ in range(1024)]
DID0=-1
DID1=-1
DID2=-1
DID3=-1
DID4=-1
DID5=-1
DID6=-1
DID7=-1
DID8=-1
DID9=-1


def INIT(device) :                                                                                  #[INIT]
    device.SendTxtCmd("TMD_STANDARD=0,0,0")                                                         #TMD_STANDARD = 0,0,0   ;I2C_CFG,RREG0,MIPI_CLK W2-T2 표준화 진행 DLL 적용 (T2 Base130902 이후, W2 BASE 130916 이후)
    FUN_EQUIPMENT(device)                                                                           #FUN/EQUIPMENT
    FUN_FLASH_SETTING_COMMON(device)                                                                #FUN/FLASH_SETTING_COMMON  ; POC 적용 모델 사용 필요.
    FUN_DEF_FONT_SET(device)                                                                        #FUN/DEF_FONT_SET
    device.SendTxtCmd("AMPMES=MANUAL,2,100")                                                        #AMPMES  = MANUAL, 2, 100
    device.SendTxtCmd("PTRN_SET=Color_Set,8,8,8")                                                   #PTRN_SET = Color_Set, 8,8,8
    device.SendTxtCmd("PTRN_SET=MIPI_LINES,4")                                                      #PTRN_SET = MIPI_LINES, 4
    device.SendTxtCmd("IFMODE0=DSI")                                                                #IFMODE0  = DSI
    device.SendTxtCmd("IFMODE1=I2C")                                                                #IFMODE1  = I2C
    device.SendTxtCmd("GPMODE0=MIPI,24BPP")                                                         #GPMODE0  = MIPI,24BPP  ; DSI-COMMAND MODE, MIPI-COMMAND MODE, IMAGE UPDATE 속도 개선, RGB-MIPI VIDEO MODE
    device.SendTxtCmd("LCDSIZE0=1080,2400")                                                         #LCDSIZE0 = 1080, 2400  ; 641RU01
    device.SendTxtCmd("PTRN_SET=PTRNOUT_FUN,PTN_BEF")                                               #PTRN_SET = PTRNOUT_FUN, PTN_BEF
    device.SendTxtCmd("PTRN_SET=DISP_RESOLUTION,OFF")                                               #PTRN_SET = DISP_RESOLUTION, OFF
    device.SendTxtCmd("PTRN_SET=PTRN_DSILINK,ON")                                                   #PTRN_SET = PTRN_DSILINK, ON
    device.SendTxtCmd("BLIND_LPMSG=ON")                                                             #BLIND_LPMSG = ON
    device.SendTxtCmd("RGB_PORCH=14,248,2,14,30,10")                                                #RGB_PORCH = 14, 248, 2, 14, 30, 10 ; VBP = 16, VFP = 248, VS, HBP, HFP, HS
    device.SendTxtCmd("I2C_CFG=0x20,100000,2,2,NO,NO,0,1,10,20,5,50,50")                            #I2C_CFG  = 0x20, 100000, 2, 2, NO, NO, 0, 1, 10,20,5,50,50 ;;S3706
    device.SendTxtCmd("I2C_DELAYMS=2,2")                                                            #I2C_DELAYMS = 2,2   ;<---------------------------------------------------구문 추가 Liuyaolin: yjg
    device.SendTxtCmd("SPI_CFG=ON,SW,4LINE")                                                        #SPI_CFG  = ON, SW, 4LINE
    device.SendTxtCmd("RCV_TYPE=NORMAL,0")                                                          #RCV_TYPE = NORMAL, 0  ; NORMAL/UCORE/AMT(or0x00~0xFF),ack delay
    device.SendTxtCmd("RCV_PORT_SET=HOST_COM")                                                      #RCV_PORT_SET = HOST_COM  ; CLIENT/HOST_COM/HOST_LAN
    device.SendTxtCmd("SPI_ID=0x000,0x000,0x000")                                                   #SPI_ID  = 0x000, 0x000, 0x000 ; WRID, DATID, RDID
    FUN_TESTER_INIT(device)                                                                         #FUN/TESTER_INIT
    FUN_VER_CHK(device)                                                                             #FUN/VER_CHK
    FUN_CYL_OFF(device)                                                                             #FUN/CYL_OFF
    device.SendTxtCmd("MESSAGE=\"SYSTEM INIT OK\"")                                                 #MESSAGE  = "SYSTEM INIT OK"

def ACT_AN00(device) :                                                                              #[ACT/AN00]
    FUN_TESTER_INIT(device)                                                                         #<> FUN/TESTER_INIT
    FUN_CYL_OFF(device)                                                                             #<> FUN/CYL_OFF
    device.SendTxtCmd("DELAYMS=100")                                                                #<> DELAYMS = 100

def ACT_AN01(device) :                                                                              #[ACT/AN01]
    device.SendTxtCmd("HOST_RCV=ON")                                                                #<> HOST_RCV = ON
    FUN_DEF_FONT_SET(device)                                                                        #<> FUN/DEF_FONT_SET
    FUN_SPEC_SET(device)                                                                            #<> FUN/SPEC_SET
    device.SendTxtCmd("MSGCLR")                                                                     #> MSGCLR
    device.SendTxtCmd("AMPCHK=ON")                                                                  #> AMPCHK = ON
    device.SendTxtCmd("SOL1=H")                                                                     #> SOL1  = H
    device.SendTxtCmd("DELAYMS=400")                                                                #> DELAYMS = 400
    device.SendTxtCmd("GPEN=ON")                                                                    #> GPEN  = ON
    FUN_FLASH_RELAY_OFF(device)                                                                     #<> FUN/FLASH_RELAY_OFF
    FUN_CYL_ON(device)                                                                              #<> FUN/CYL_ON
    FUN_POWER_ON(device)                                                                            #> FUN/POWER_ON
    FUN_MIPI_CMD_ON(device)                                                                         #> FUN/MIPI_CMD_ON
    device.SendTxtCmd("DELAYMS=100")                                                                #> DELAYMS = 100
    device.SendTxtCmd("DEFAULT_GAMMA=0")                                                            #<> DEFAULT_GAMMA = 0
    FUN_RESET_L(device)                                                                             #<> FUN/RESET_L

def ACT_AN02(device) :                                                                              #[ACT/AN02]
    FUN_PASSWORD_UNLOCK(device)                                                                     #<> FUN/PASSWORD_UNLOCK
    FUN_RESET(device)                                                                               #<> FUN/RESET

def ACT_AN03(device) :                                                                              #[ACT/AN03]
    FUN_PASSWORD_UNLOCK(device)                                                                     #<> FUN/PASSWORD_UNLOCK
    device.SendTxtCmd("MESSAGE=\"Sleep out...\"")                                                   #<> MESSAGE = "Sleep out..."
    FUN_MANUAL_INITIAL(device)                                                                      #<> FUN/MANUAL_INITIAL

def ACT_AN04(device) :                                                                              #[ACT/AN04]
    FUN_PASSWORD_UNLOCK(device)                                                                     #<> FUN/PASSWORD_UNLOCK
    FUN_MAN_02(device)                                                                              #<> FUN/MAN_02

def ACT_AN05(device) :                                                                              #[ACT/AN05]
    FUN_PASSWORD_UNLOCK(device)                                                                     #<> FUN/PASSWORD_UNLOCK
    FUN_MAN_03(device)                                                                              #<> FUN/MAN_03

def ACT_AN06(device) :                                                                              #[ACT/AN06]
    FUN_PASSWORD_UNLOCK(device)                                                                     #<> FUN/PASSWORD_UNLOCK
    FUN_MAN_04(device)                                                                              #<> FUN/MAN_04

def ACT_AN07(device) :                                                                              #[ACT/AN07]
    FUN_PASSWORD_UNLOCK(device)                                                                     #<> FUN/PASSWORD_UNLOCK
    FUN_MAN_05(device)                                                                              #<> FUN/MAN_05

def ACT_AN08(device) :                                                                              #[ACT/AN08]
    FUN_PASSWORD_UNLOCK(device)                                                                     #<> FUN/PASSWORD_UNLOCK
    FUN_MAN_06(device)                                                                              #<> FUN/MAN_06

def ACT_AN09(device) :                                                                              #[ACT/AN09]
    FUN_PASSWORD_UNLOCK(device)                                                                     #<> FUN/PASSWORD_UNLOCK
    FUN_MAN_07(device)                                                                              #<> FUN/MAN_07

def ACT_AN10(device) :                                                                              #[ACT/AN10]
    FUN_PASSWORD_UNLOCK(device)                                                                     #<> FUN/PASSWORD_UNLOCK
    FUN_MAN_08(device)                                                                              #<> FUN/MAN_08

def ACT_AN11(device) :                                                                              #[ACT/AN11]
    FUN_PASSWORD_UNLOCK(device)                                                                     #<> FUN/PASSWORD_UNLOCK
    FUN_MAN_09(device)                                                                              #<> FUN/MAN_09

def ACT_AN12(device) :                                                                              #[ACT/AN12]
    FUN_PASSWORD_UNLOCK(device)                                                                     #<> FUN/PASSWORD_UNLOCK
    FUN_MAN_10(device)                                                                              #<> FUN/MAN_10

def ACT_AN13(device) :                                                                              #[ACT/AN13]
    FUN_PASSWORD_UNLOCK(device)                                                                     #<> FUN/PASSWORD_UNLOCK
    FUN_MAN_11(device)                                                                              #<> FUN/MAN_11

def ACT_AN14(device) :                                                                              #[ACT/AN14]
    FUN_PASSWORD_UNLOCK(device)                                                                     #<> FUN/PASSWORD_UNLOCK
    FUN_MAN_12(device)                                                                              #<> FUN/MAN_12

def ACT_AN15(device) :                                                                              #[ACT/AN15]
    FUN_PASSWORD_UNLOCK(device)                                                                     #<> FUN/PASSWORD_UNLOCK
    FUN_MAN_13(device)                                                                              #<> FUN/MAN_13

def ACT_AN16(device) :                                                                              #[ACT/AN16]
    FUN_PASSWORD_UNLOCK(device)                                                                     #<> FUN/PASSWORD_UNLOCK
    FUN_MAN_14(device)                                                                              #<> FUN/MAN_14

def ACT_AN17(device) :                                                                              #[ACT/AN17]
    FUN_PASSWORD_UNLOCK(device)                                                                     #<> FUN/PASSWORD_UNLOCK
    FUN_MAN_15(device)                                                                              #<> FUN/MAN_15

def ACT_AN18(device) :                                                                              #[ACT/AN18]
    FUN_PASSWORD_UNLOCK(device)                                                                     #<> FUN/PASSWORD_UNLOCK
    FUN_MAN_16(device)                                                                              #<> FUN/MAN_16

def ACT_AN19(device) :                                                                              #[ACT/AN19]
    FUN_PASSWORD_UNLOCK(device)                                                                     #<> FUN/PASSWORD_UNLOCK
    FUN_MAN_17(device)                                                                              #<> FUN/MAN_17

def FUN_AFT_IDCHK_NG(device) :                                                                      #[FUN/AFT_IDCHK_NG]
    device.SendTxtCmd("RCV_CMD=MIT_MSG,ID_CHECK,NG")                                                #RCV_CMD  = MIT_MSG,ID_CHECK,NG
    device.SendTxtCmd("FUN=WHITE_CURRENT_CHECK")                                                    #FUN  = WHITE_CURRENT_CHECK ; AFT는 WHite 패턴에서 전류 검사와  ID 체크 동시 진행
    FUN_NORMAL_CURRENT_LIMIT(device)                                                                #FUN/NORMAL_CURRENT_LIMIT  ; 170815 SDT 추가 구문
    device.SendTxtCmd("DELAYMS=200")                                                                #DELAYMS  = 200   ; 170815 SDT 추가 구문

def FUN_AFT_IDCHK_OK(device) :                                                                      #[FUN/AFT_IDCHK_OK]
    device.SendTxtCmd("RCV_CMD=MIT_MSG,ID_CHECK,GOOD")                                              #RCV_CMD  = MIT_MSG,ID_CHECK,GOOD
    device.SendTxtCmd("FUN=WHITE_CURRENT_CHECK")                                                    #FUN  = WHITE_CURRENT_CHECK ; AFT는 WHite 패턴에서 전류 검사와  ID 체크 동시 진행
    FUN_NORMAL_CURRENT_LIMIT(device)                                                                #FUN/NORMAL_CURRENT_LIMIT  ; 170815 SDT 추가 구문
    device.SendTxtCmd("DELAYMS=200")                                                                #DELAYMS  = 200   ; 170815 SDT 추가 구문

def FUN_AMT_IDCHK_NG(device) :                                                                      #[FUN/AMT_IDCHK_NG]
    device.SendTxtCmd("RCV_CMD=MIT_MSG,ID_CHECK,NG")                                                #RCV_CMD  = MIT_MSG,ID_CHECK,NG ; AMT는 ID_CHECK 만 진행
    FUN_ERROR_MSG_MIT(device)                                                                       #FUN/ERROR_MSG_MIT

def FUN_AMT_IDCHK_OK(device) :                                                                      #[FUN/AMT_IDCHK_OK]
    device.SendTxtCmd("RCV_CMD=MIT_MSG,ID_CHECK,GOOD")                                              #RCV_CMD  = MIT_MSG,ID_CHECK,GOOD ; AMT는 ID_CHECK 만 진행

def FUN_AMT_ID_CHECK(device) :                                                                      #[FUN/AMT_ID_CHECK]
    device.SendTxtCmd("AMT_ID_CHK")                                                                 #AMT_ID_CHK

def FUN_AUTO_INITIAL(device) :                                                                      #[FUN/AUTO_INITIAL]
    device.SendTxtCmd("MESSAGE=\"BEF Initial...\"")                                                 #MESSAGE  = "BEF Initial..."
    device.SendTxtCmd("DELAYMS=5")                                                                  #DELAYMS  = 5
    device.SendTxtCmd("WREG0=0x39,0x9F,0x5A,0x5A")                                                  #WREG0  = 0x39, 0x9F, 0x5A, 0x5A ; Level 1 key ON (UCS)
    device.SendTxtCmd("WREG0=0x39,0xF0,0x5A,0x5A")                                                  #WREG0  = 0x39, 0xF0, 0x5A,0x5A ; Level 2 key ON (MCS)
    device.SendTxtCmd("WREG0=0x39,0xFC,0x5A,0x5A")                                                  #WREG0  = 0x39, 0xFC, 0x5A,0x5A ; Level 2 Key ON, OTP COUNT Reading
    device.SendTxtCmd("WREG0=0x15,0xB0,0x09")                                                       #WREG0  = 0x15, 0xB0, 0x09
    device.SendTxtCmd("WREG0=0x15,0xFB,0x08")                                                       #WREG0  = 0x15, 0xFB, 0x08
    FUN_OTP_REGISTER_SET(device)                                                                    #FUN/OTP_REGISTER_SET
    FUN_LTPS_GAMMA_UPDATE(device)                                                                   #FUN/LTPS_GAMMA_UPDATE
    device.SendTxtCmd("DELAYMS=5")                                                                  #DELAYMS  = 5
    device.SendTxtCmd("WREG0=0x05,0x11")                                                            #WREG0  = 0x05, 0x11  ; Sleep out
    device.SendTxtCmd("DELAYMS=5")                                                                  #DELAYMS  = 5
    device.SendTxtCmd("PATTERN0=0,1,1")                                                             #PATTERN0 = 0,1,1
    device.SendTxtCmd("MESSAGE=\"Brightness Control.\"")                                            #MESSAGE  = "Brightness Control."
    device.SendTxtCmd("WREG0=0x15,0x53,0x20")                                                       #WREG0  = 0x15, 0x53, 0x20 ; Brightness Control ON
    device.SendTxtCmd("WREG0=0x39,0x51,0x03,0xFF")                                                  #WREG0  = 0x39, 0x51, 0x03, 0xFF
    device.SendTxtCmd("WREG0=0x39,0x35,0x00")                                                       #WREG0  = 0x39, 0x35, 0x00
    device.SendTxtCmd("WREG0=0x39,0x60,0x10")                                                       #WREG0  = 0x39, 0x60, 0x10 ;FQ_SEL  90Hz 구동
    device.SendTxtCmd("DELAYMS=130")                                                                #DELAYMS  = 130   ; 3fc2 임시 delay
    FUN_OTP_REGISTER_SET(device)                                                                    #FUN/OTP_REGISTER_SET
    FUN_LTPS_GAMMA_UPDATE(device)                                                                   #FUN/LTPS_GAMMA_UPDATE
    FUN_DEF_GAMMA_SET(device)                                                                       #FUN/DEF_GAMMA_SET
    device.SendTxtCmd("WREG0=0x05,0x29")                                                            #WREG0  = 0x05, 0x29  ;Display on
    device.SendTxtCmd("MESSAGE=\"Display On.\"")                                                    #MESSAGE  = "Display On."
    device.SendTxtCmd("WREG0=0x39,0xFC,0x5A,0x5A")                                                  #WREG0  = 0x39, 0xFC, 0x5A,0x5A ; Level 2 Key ON, OTP COuNT Reading
    device.SendTxtCmd("WREG0=0x39,0xF0,0x5A,0x5A")                                                  #WREG0  = 0x39, 0xF0, 0x5A, 0x5A ; RESET 후 Register F0h 접근 제한 되어 풀어주는 코드 추가
    device.SendTxtCmd("MESSAGE=\"AUTO_INITIAL OK\"")                                                #MESSAGE  = "AUTO_INITIAL OK"
    device.SendTxtCmd("PATTERN0=0,1,1")                                                             #PATTERN0 = 0,1,1

def FUN_AUTO_INITIAL2(device) :                                                                     #[FUN/AUTO_INITIAL2]
    device.SendTxtCmd("MESSAGE=\"AFT Initial...\"")                                                 #MESSAGE  = "AFT Initial..."
    device.SendTxtCmd("DSI_ENHSCLK=OFF")                                                            #DSI_ENHSCLK = OFF   ; LP11
    device.SendTxtCmd("DELAYMS=5")                                                                  #DELAYMS  = 5
    device.SendTxtCmd("SPI_CFG=OFF,SW,4LINE")                                                       #SPI_CFG  = OFF, SW, 4LINE
    device.SendTxtCmd("DELAYMS=50")                                                                 #DELAYMS  = 50
    device.SendTxtCmd("WREG0=0x39,0x9F,0x5A,0x5A")                                                  #WREG0  = 0x39, 0x9F, 0x5A, 0x5A ; Level 1 key ON (UCS)
    device.SendTxtCmd("WREG0=0x39,0xF0,0x5A,0x5A")                                                  #WREG0  = 0x39, 0xF0, 0x5A,0x5A ; Level 2 key ON (MCS)
    device.SendTxtCmd("WREG0=0x39,0xFC,0x5A,0x5A")                                                  #WREG0  = 0x39, 0xFC, 0x5A,0x5A ; Level 2 Key ON, OTP COUNT Reading
    device.SendTxtCmd("WREG0=0x05,0x11")                                                            #WREG0  = 0x05, 0x11  ; Sleep out
    device.SendTxtCmd("DELAYMS=5")                                                                  #DELAYMS  = 5   ; IC spec상 5ms이나 1frame 이상 추천
    device.SendTxtCmd("PATTERN0=0,1,1")                                                             #PATTERN0 = 0,1,1
    device.SendTxtCmd("WREG0=0x15,0x35,0x00")                                                       #WREG0  = 0x15, 0x35, 0x00 ; TE ON, 3/13 추가
    device.SendTxtCmd("MESSAGE=\"Brightness Control.\"")                                            #MESSAGE  = "Brightness Control."
    device.SendTxtCmd("WREG0=0x15,0x53,0x20")                                                       #WREG0  = 0x15, 0x53, 0x20 ; Brightness Control ON
    device.SendTxtCmd("WREG0=0x39,0x51,0x03,0xFF")                                                  #WREG0  = 0x39, 0x51, 0x03, 0xFF
    device.SendTxtCmd("WREG0=0x39,0x60,0x10")                                                       #WREG0  = 0x39, 0x60, 0x10 ;FQ_SEL  90Hz 구동
    device.SendTxtCmd("DELAYMS=80")                                                                 #DELAYMS  = 80
    device.SendTxtCmd("WREG0=0x05,0x29")                                                            #WREG0  = 0x05, 0x29
    device.SendTxtCmd("MESSAGE=\"Display On.\"")                                                    #MESSAGE  = "Display On."
    device.SendTxtCmd("MESSAGE=\"AUTO_INITIAL AFTER OK\"")                                          #MESSAGE  = "AUTO_INITIAL AFTER OK"
    device.SendTxtCmd("WREG0=0x05,0x35")                                                            #WREG0  = 0x05, 0x35
    device.SendTxtCmd("PATTERN0=0,1,1")                                                             #PATTERN0 = 0,1,1
    device.SendTxtCmd("SPI_CFG=ON,SW,4LINE")                                                        #SPI_CFG  = ON, SW, 4LINE

def FUN_CHECK1(device) :                                                                            #[FUN/CHECK1]
    device.SendTxtCmd("READ_IF=2,TRUE,CHECK2")                                                      #READ_IF  = 2, TRUE, CHECK2
    device.SendTxtCmd("READ_IF=2,FALSE,ERROR_MSG")                                                  #READ_IF  = 2, FALSE, ERROR_MSG

def FUN_CHECK1_T2(device) :                                                                         #[FUN/CHECK1_T2]
    device.SendTxtCmd("READ_IF=2,TRUE,CHECK2_T2")                                                   #READ_IF  = 2, TRUE, CHECK2_T2
    device.SendTxtCmd("READ_IF=2,FALSE,ERROR_MSG")                                                  #READ_IF  = 2, FALSE, ERROR_MSG

def FUN_CHECK2(device) :                                                                            #[FUN/CHECK2]
    device.SendTxtCmd("READ_IF=3,TRUE,OK_MSG")                                                      #READ_IF  = 3, TRUE,  OK_MSG ;DITHER_CHECK_MIT
    device.SendTxtCmd("READ_IF=3,FALSE,ERROR_MSG")                                                  #READ_IF  = 3, FALSE, ERROR_MSG

def FUN_CHECK2_T2(device) :                                                                         #[FUN/CHECK2_T2]
    device.SendTxtCmd("READ_IF=3,TRUE,OK_MSG")                                                      #READ_IF  = 3, TRUE,  OK_MSG
    device.SendTxtCmd("READ_IF=3,FALSE,ERROR_MSG")                                                  #READ_IF  = 3, FALSE, ERROR_MSG

def FUN_CURCHKNGOUT(device) :                                                                       #[FUN/CURCHKNGOUT]
    device.SendTxtCmd("MESSAGE=\"AOD CURRENT NG\"")                                                 #MESSAGE  = "AOD CURRENT NG"
    device.SendTxtCmd("RCV_CMD=MIT_MSG,C_CURRENT,GET_CURCHK,6,IBAT,GET_IBAT,IVSS,GET_ISS,IDD,GET_IDD,ICI,GET_ICI,IBAT2,GET_IBAT2,IDD2,GET_IDD2")          #RCV_CMD  = MIT_MSG,C_CURRENT,GET_CURCHK,6,IBAT,GET_IBAT,IVSS,GET_ISS,IDD,GET_IDD,ICI,GET_ICI,IBAT2,GET_IBAT2,IDD2,GET_IDD2
    device.SendTxtCmd("AMPCHK=OFF")                                                                 #AMPCHK  = OFF
    FUN_NORMAL_CURRENT_LIMIT(device)                                                                #FUN/NORMAL_CURRENT_LIMIT  ;SLL
    device.SendTxtCmd("WREG0=0x39,0x53,0x20")                                                       #WREG0  = 0x39, 0x53, 0x20
    device.SendTxtCmd("RCV_CMD=MIT_MSG,MTP_VERIFY,NG,ALPM2SpecOver")                                #RCV_CMD  = MIT_MSG,MTP_VERIFY,NG,ALPM2 Spec Over
    device.SendTxtCmd("DNSENDEND=1,1,1")                                                            #DNSENDEND = 1,1,1
    device.SendTxtCmd("TEST_STOP")                                                                  #TEST_STOP

def FUN_CURCHKOKOUT(device) :                                                                       #[FUN/CURCHKOKOUT]
    device.SendTxtCmd("MESSAGE=\"AOD CURRENT OK\"")                                                 #MESSAGE  = "AOD CURRENT OK"
    device.SendTxtCmd("RCV_CMD=MIT_MSG,C_CURRENT,GET_CURCHK,6,IBAT,GET_IBAT,IVSS,GET_ISS,IDD,GET_IDD,ICI,GET_ICI,IBAT2,GET_IBAT2,IDD2,GET_IDD2")          #RCV_CMD  = MIT_MSG,C_CURRENT,GET_CURCHK,6,IBAT,GET_IBAT,IVSS,GET_ISS,IDD,GET_IDD,ICI,GET_ICI,IBAT2,GET_IBAT2,IDD2,GET_IDD2
    device.SendTxtCmd("AMPCHK=OFF")                                                                 #AMPCHK  = OFF
    FUN_NORMAL_CURRENT_LIMIT(device)                                                                #FUN/NORMAL_CURRENT_LIMIT  ;SLL
    device.SendTxtCmd("WREG0=0x39,0x53,0x20")                                                       #WREG0  = 0x39, 0x53, 0x20

def FUN_CYL_OFF(device) :                                                                           #[FUN/CYL_OFF]
    if IF_STATE[9]==1 : CYL_OFF_W2                                                                  #IF_STATE = 9, 1, CYL_OFF_W2
    if IF_STATE[9]==2 : CYL_OFF_W2                                                                  #IF_STATE = 9, 2, CYL_OFF_W2
    if IF_STATE[9]==3 : CYL_OFF_MIT                                                                 #IF_STATE = 9, 3, CYL_OFF_MIT
    if IF_STATE[9]==4 : CYL_OFF_MIT                                                                 #IF_STATE = 9, 4, CYL_OFF_MIT
    if IF_STATE[9]==5 : CYL_OFF_MIT                                                                 #IF_STATE = 9, 5, CYL_OFF_MIT
    if IF_STATE[9]==6 : CYL_OFF_MIT                                                                 #IF_STATE = 9, 6, CYL_OFF_MIT
    if IF_STATE[9]==7 : CYL_OFF_MIT                                                                 #IF_STATE = 9, 7, CYL_OFF_MIT ; POC 2.0
    if IF_STATE[9]==8 : CYL_OFF_MIT                                                                 #IF_STATE = 9, 8, CYL_OFF_MIT ; POC 51G

def FUN_CYL_OFF_MIT(device) :                                                                       #[FUN/CYL_OFF_MIT]
    device.SendTxtCmd("SOL3=L")                                                                     #SOL3  = L   ;AMT OneSocket Up
    device.SendTxtCmd("DELAYMS=300")                                                                #DELAYMS  = 300
    device.SendTxtCmd("SOL1=L")                                                                     #SOL1  = L   ;FORWARD
    device.SendTxtCmd("SOL2=H")                                                                     #SOL2  = H   ;BACKWARD

def FUN_CYL_OFF_W2(device) :                                                                        #[FUN/CYL_OFF_W2]
    device.SendTxtCmd("SOL2=L")                                                                     #SOL2  = L   ;Manual OneSocket Down
    device.SendTxtCmd("DELAYMS=100")                                                                #DELAYMS  = 100
    device.SendTxtCmd("SOL1=L")                                                                     #SOL1  = L   ;AMT OneSocket Down
    device.SendTxtCmd("DELAYMS=100")                                                                #DELAYMS  = 100

def FUN_CYL_ON(device) :                                                                            #[FUN/CYL_ON]
    if IF_STATE[9]==1 : CYL_ON_W2                                                                   #IF_STATE = 9, 1, CYL_ON_W2
    if IF_STATE[9]==2 : CYL_ON_W2                                                                   #IF_STATE = 9, 2, CYL_ON_W2
    if IF_STATE[9]==3 : CYL_ON_MIT                                                                  #IF_STATE = 9, 3, CYL_ON_MIT
    if IF_STATE[9]==4 : CYL_ON_MIT                                                                  #IF_STATE = 9, 4, CYL_ON_MIT
    if IF_STATE[9]==5 : CYL_ON_MIT                                                                  #IF_STATE = 9, 5, CYL_ON_MIT
    if IF_STATE[9]==6 : CYL_ON_MIT                                                                  #IF_STATE = 9, 6, CYL_ON_MIT
    if IF_STATE[9]==7 : CYL_ON_MIT                                                                  #IF_STATE = 9, 7, CYL_ON_MIT ; POC2.0
    if IF_STATE[9]==8 : CYL_ON_MIT                                                                  #IF_STATE = 9, 8, CYL_ON_MIT ; POC 51G

def FUN_CYL_ON_MIT(device) :                                                                        #[FUN/CYL_ON_MIT]
    device.SendTxtCmd("SOL1=H")                                                                     #SOL1  = H   ;FORWARD
    device.SendTxtCmd("SOL2=L")                                                                     #SOL2  = L   ;BACKWARD
    device.SendTxtCmd("DELAYMS=300")                                                                #DELAYMS  = 300   ;300 -> 500, CONN. 실린더 이동 DELAY 증가 (컨텍 안정화 확보) 141016
    device.SendTxtCmd("SOL3=H")                                                                     #SOL3  = H   ;AMT OneSocket Down
    device.SendTxtCmd("DELAYMS=300")                                                                #DELAYMS  = 300

def FUN_CYL_ON_W2(device) :                                                                         #[FUN/CYL_ON_W2]
    device.SendTxtCmd("SOL1=H")                                                                     #SOL1  = H   ;Connector OneSocket Down
    device.SendTxtCmd("DELAYMS=100")                                                                #DELAYMS  = 100
    device.SendTxtCmd("SOL2=H")                                                                     #SOL2  = H   ;BG7000/CA310 Down
    device.SendTxtCmd("DELAYMS=100")                                                                #DELAYMS  = 100

def FUN_DEF_FONT_SET(device) :                                                                      #[FUN/DEF_FONT_SET]
    if IF_STATE[9]==1 : DEF_FONT_SET_MANUAL                                                         #IF_STATE = 9, 1, DEF_FONT_SET_MANUAL
    if IF_STATE[9]==2 : DEF_FONT_SET_MANUAL                                                         #IF_STATE = 9, 2, DEF_FONT_SET_MANUAL
    if IF_STATE[9]==3 : DEF_FONT_SET_MIT                                                            #IF_STATE = 9, 3, DEF_FONT_SET_MIT
    if IF_STATE[9]==4 : DEF_FONT_SET_MIT                                                            #IF_STATE = 9, 4, DEF_FONT_SET_MIT
    if IF_STATE[9]==5 : DEF_FONT_SET_MIT                                                            #IF_STATE = 9, 5, DEF_FONT_SET_MIT
    if IF_STATE[9]==6 : DEF_FONT_SET_MANUAL                                                         #IF_STATE = 9, 6, DEF_FONT_SET_MANUAL
    if IF_STATE[9]==7 : DEF_FONT_SET_MIT                                                            #IF_STATE = 9, 7, DEF_FONT_SET_MIT
    if IF_STATE[9]==8 : DEF_FONT_SET_MIT                                                            #IF_STATE = 9, 8, DEF_FONT_SET_MIT

def FUN_DEF_FONT_SET_MANUAL(device) :                                                               #[FUN/DEF_FONT_SET_MANUAL]
    device.SendTxtCmd("MSGFONT=50,150,1080,91.2,0x007F0000,0x01000000,91.2")                        #MSGFONT  = 50, 150, 1080, 91.2, 0x007F0000, 0x01000000, 91.2
    device.SendTxtCmd("ERRFONT=50,150,1080,91.2,0x0000FF00,0x01000000,91.2")                        #ERRFONT  = 50, 150, 1080, 91.2, 0x0000FF00, 0x01000000, 91.2

def FUN_DEF_FONT_SET_MIT(device) :                                                                  #[FUN/DEF_FONT_SET_MIT]
    device.SendTxtCmd("MSGFONT=50,150,1080,91.2,0x007F0000,0x01000000,91.2")                        #M