from TModule.Device import *
from TModule import Aging
import inspect

class TCStep_1(Aging.TCStepBase) :
    def __init__(this, device): 
        Aging.TCStepBase.__init__(this, this.__class__.__name__, device, "RESET")

    def __Run__(this) :
        #HWReset Low
        this.device.DD_set_fb0_blank(1)         #echo 1 >  /sys/class/graphics/fb0/blank    화면 ON상태에서 BlankMode진입
        this.device.DD_set_dsim_manual_ctrl(1)  #echo 1 > /sys/devices/platform/12870000.dsim/manual_ctrl    Manual Mode 1 (Reset) 설정
        this.device.DD_set_fb0_blank(0)         #echo 0 >  /sys/class/graphics/fb0/blank    Unblank 호출 (Manual Mode 번호에 따라 단계적으로 Wakeup됨)
        #Meausre
        measureRes = this.device.AgingMeasureADC()
        measureRes.Print()


class TCStep_2(Aging.TCStepBase) :
    def __init__(this, device): 
        Aging.TCStepBase.__init__(this, this.__class__.__name__, device, "Sleep in")

    def __Run__(this) :
        #HWReset High
        this.device.DD_set_dsim_manual_ctrl(2)  #echo 2 > /sys/devices/platform/12870000.dsim/manual_ctrl    Manual Mode 2 (Sleep in) 설정
        this.device.DD_set_fb0_blank(0)         #echo 0 >  /sys/class/graphics/fb0/blank    Unblank 호출해서 Sleep-In상태까지 WakeUp
        #Meausre
        measureRes = this.device.AgingMeasureADC()
        measureRes.Print()
    

class TCStep_3(Aging.TCStepBase) :
    def __init__(this, device): 
        Aging.TCStepBase.__init__(this, this.__class__.__name__, device, "Deep Standby")

    def __Run__(this) :
        #AP Control
        this.device.WREG0_05(0xD9)         #echo "write 0x05 0xD9" > /sys/devices/platform/12870000.dsim/mipi_rw
        #Measure
        measureRes = this.device.AgingMeasureADC()
        measureRes.Print()
       

class TCStep_4(Aging.TCStepBase) :
    def __init__(this, device): 
        Aging.TCStepBase.__init__(this, this.__class__.__name__, device, "IdleMode @ Sleep IN")

    def __Run__(this) :
        #HW Reset Low
        this.device.DD_set_dsim_manual_ctrl(3)  #echo 3 > /sys/devices/platform/12870000.dsim/manual_ctrl    Manual Mode 3 (Deep Standby OUT) 설정
        #DELAYMS=10
        this.device.DelayMS(10)
        #HW Reset High
        #DELAYMS=50
        this.device.DelayMS(50)
        #WREG0=0x05,0x39
        this.device.WREG0_05(0x39)                #echo "write 0x05 0x39" > /sys/devices/platform/12870000.dsim/mipi_rw
        #Measure
        measureRes = this.device.AgingMeasureADC()
        measureRes.Print()


class TCStep_5(Aging.TCStepBase) :
    def __init__(this, device): 
        Aging.TCStepBase.__init__(this, this.__class__.__name__, device, "Idle Mode @ SleepOut")

    def __Run__(this) :
        #APControl
        this.device.WREG0_05(0x11)                #echo "write 0x05 0x11" > /sys/devices/platform/12870000.dsim/mipi_rw  MIPI명령어로 Sleep Out
        #Measure
        measureRes = this.device.AgingMeasureADC()
        measureRes.Print()


class TCStep_6(Aging.TCStepBase) :
    def __init__(this, device): 
        Aging.TCStepBase.__init__(this, this.__class__.__name__, device, "Sleep OUT")

    def __Run__(this) :
        #APControl 
        this.device.WREG0_05(0x38)                #echo "write 0x05 0x38" > /sys/devices/platform/12870000.dsim/mipi_rw  MIPI명령어로 Idle Mode OUT
        #DELAYMS=120
        this.device.DelayMS(120)
        #Measure
        measureRes = this.device.AgingMeasureADC()
        measureRes.Print()


class TCStep_7(Aging.TCStepBase) :
    def __init__(this, device): 
        Aging.TCStepBase.__init__(this, this.__class__.__name__, device, "Display OUT(Black)")

    def __Run__(this) :
        #TC1-6 완료후에,
        #1) Manual Mode 4 (Display Out) 설정
        this.device.DD_set_dsim_manual_ctrl(4)  #echo 4 > /sys/devices/platform/12870000.dsim/manual_ctrl
        #2) Unblank 호출해서 DSIM, DECON 초기화 및 화면 출력 (아래 Initial code는 드라이버에 정의된 MIPI command list가 전다됨)
        this.device.DD_set_fb0_blank(0)         #echo 0 >  /sys/class/graphics/fb0/blank    
        #APControl
        #WREG0 = 0x39, 0xF0, 0x5A, 0x5A ; Level 2 key ON
        wregList=[0x5A, 0x5A]; this.device.WREG0_39(0xF0, wregList)  
        #WREG0 = 0x39, 0xFC, 0x5A, 0x5A ; Level 3 key ON
        wregList=[0x5A, 0x5A]; this.device.WREG0_39(0xFC, wregList)  
        #WREG0  = 0x39,0xE6,0x09,0x55,0xAA,0xAA,0x55,0x55,0x55,0x64,0xA4,0x69,0x04,0x87,0x54,0xD4,0x37,0xAB,0xB7,0x00,0xFF,0xFF,0xFF,0xFF,0x13,0x13,0x00,0x23,0x16,0x00,0xFF,0x00,0x00,0x10,0x10,0x10,0x10,0x10
        wregList=[0x09,0x55,0xAA,0xAA,0x55,0x55,0x55,0x64,0xA4,0x69,0x04,0x87,0x54,0xD4,0x37,0xAB,0xB7,0x00,0xFF,0xFF,0xFF,0xFF,0x13,0x13,0x00,0x23,0x16,0x00,0xFF,0x00,0x00,0x10,0x10,0x10,0x10,0x10]
        this.device.WREG0_39(0xE6, wregList)
        #DELAYMS  = 500
        this.device.DelayMS(500)
        #WREG0  = 0x07, 0x01
        this.device.WREG0_07(0x01)
        #WREG0  = 0x39, 0x9E, 0x11,0x00,0x00,0x89,0x30,0x80,0x0C,0x60,0x05,0xA0,0x00,0x18,0x02,0xD0,0x02,0xD0,0x02,0x00,0x02,0x86,0x00,0x20,0x02,0x83,0x00,0x0A,0x00,0x0D,0x04,0x86,0x03,0x2E,0x18,0x00,0x10,0xF0,0x03,0x0C,0x20,0x00,0x06,0x0B,0x0B,0x33,0x0E,0x1C,0x2A,0x38,0x46,0x54,0x62,0x69,0x70,0x77,0x79,0x7B,0x7D,0x7E,0x01,0x02,0x01,0x00,0x09,0x40,0x09,0xBE,0x19,0xFC,0x19,0xFA,0x19,0xF8,0x1A,0x38,0x1A,0x78,0x1A,0xB6,0x2A,0xB6,0x2A,0xF4,0x2A,0xF4,0x4B,0x34,0x63,0x74 ; 678UW01 - 190903
        wregList=[0x11,0x00,0x00,0x89,0x30,0x80,0x0C,0x60,0x05,0xA0,0x00,0x18,0x02,0xD0,0x02,0xD0,0x02,0x00,0x02,0x86,0x00,0x20,0x02,0x83,0x00,0x0A,0x00,0x0D,0x04,0x86,0x03,0x2E,0x18,0x00,0x10,0xF0,0x03,0x0C,0x20,0x00,0x06,0x0B,0x0B,0x33,0x0E,0x1C,0x2A,0x38,0x46,0x54,0x62,0x69,0x70,0x77,0x79,0x7B,0x7D,0x7E,0x01,0x02,0x01,0x00,0x09,0x40,0x09,0xBE,0x19,0xFC,0x19,0xFA,0x19,0xF8,0x1A,0x38,0x1A,0x78,0x1A,0xB6,0x2A,0xB6,0x2A,0xF4,0x2A,0xF4,0x4B,0x34,0x63,0x74]
        this.device.WREG0_39(0x9E, wregList)
        #WREG0  = 0x15, 0xF7, 0X0F
        this.device.WREG0_15(0xF7, 0x0F)
        #DELAYMS = 100
        this.device.DelayMS(100)
        #WREG0 = 0x39, 0x60, 0x20 ; Frame_rate 120Hz(0X00=60Hz, 0X20=120Hz)
        wregList=[0x20]
        this.device.WREG0_39(0x60, wregList)
        #WREG0 = 0x39, 0xF7, 0x0F
        wregList=[0x0F]
        this.device.WREG0_39(0xF7, wregList)
        #WREG0 = 0x39, 0x51, 0x03, 0xFF
        wregList=[0x03, 0xFF]
        this.device.WREG0_39(0x51, wregList)
        #WREG0 = 0x39, 0x53, 0x20
        wregList=[0x20]
        this.device.WREG0_39(0x53, wregList)
        #DELAYMS  = 5
        this.device.DelayMS(5)
        #WREG0  = 0x39, 0x35, 0x00 ; TE_ON
        wregList=[0x00]
        this.device.WREG0_39(0x35, wregList)
        #DSI_HSLP = HS
        #PTRN_SET = PAINT, 0x00000000
        this.device.PTRN_SET("PAINT,0x00000000")
        #PTRN_SET = Write, 0
        this.device.PTRN_SET("Write, 0")
        #WREG0  = 0x05, 0x29
        this.device.WREG0_05(0x29)
        #Measure
        measureRes = this.device.AgingMeasureADC()
        measureRes.Print()


class TC(Aging.TCBase) :
    def __init__(this, device): 
        Aging.TCBase.__init__(this, inspect.getfile(inspect.currentframe()), device, "Static Current Measurement")

        #TCStep객체 생성 및 등록
        this.Add(TCStep_1(device))
        this.Add(TCStep_2(device))
        this.Add(TCStep_3(device))
        this.Add(TCStep_4(device))
        this.Add(TCStep_5(device))
        this.Add(TCStep_6(device))
        this.Add(TCStep_7(device))

    def __Begin__(this) :
        this.device.Vlin1AdcSetSamples(32)
        this.device.VciAdcSetSamples(32)

    def __End__(this) :
        #모든 테스트 완료후에 Manual Mode를 0으로 다시 초기화
        this.device.DD_set_dsim_manual_ctrl(0)  #echo 0 > /sys/devices/platform/12870000.dsim/manual_ctrl

    
if __name__ == "__main__" :
    
    device = TDevice(TDevice.Type.TESys)
    print("Connect To " + device.GetName() )
    isConnect = device.Connect()
    assert isConnect 

    tc = TC(device)
    tc.Run()

    #Disconnect
    print("Disconnect from " + device.GetName() )
    device.Disonnect()
    print("End of Exam. Bye!!")
    print()


 
