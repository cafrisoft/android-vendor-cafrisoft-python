

import ted
import sys
import getopt
import enum

def print_help() :
    print(" ")
    print("ted.scrverify --<option-name>=<options-value> ")
    print(" ")
    print("   <options-name>")
    print("       --red:  verify red color value (0~255)")
    print("       --green:  verify green color value (0~255)")
    print("       --blue:  verify green color value (0~255)")
    print(" ")
    print("   Example:")
    print("       Ex1) ted.scrverfiy --red=10 --green=30 --blue=40")
    print("       Ex2) ted.scrverfiy --red=0xFF --green=0xAA --blue=0x10")
    print(" ")
    

class ColorT(enum.IntEnum) :
    Red=0
    Green=1
    Blue=2

def string_to_int(strValue, valueName) : 
    try :
        value=int(strValue, 0)
    except ValueError as err:
        print("ValueError : %s is not Number [%s]" % (valueName,strValue))
        sys.exit()
    return value


def main(argv) :
    
    print()
    print("<<TedScreenVerify>>")

    try :
        # opts : getopt 옵션에 따라 파싱 ex) [('-i', 'myin')]
        # etc_args: getopt 옵션 이외에 입력된 일반 Argument
        # argv 첫번째 (index:0) 는 Python파일명, 두번째 (index:1) 부터  Arguments
        opts, etc_args = getopt.getopt(argv[1:], "hr:g:b", ["help", "red=","green=", "blue=" ])

    except getopt.GetoptError:  #옵션지정이 올바르지 않은 경우
        print("ERROR :  the name of option is invalid")
        sys.exit()
    
    colorList =[ -1 for _ in ColorT]
    #print("Initial ColorList : ", colorList)

    if len(opts)==0 :
        print_help()
        sys.exit()
    
    for opt, arg in opts :

        if opt in ("-h", "--help") :
            print_help()
            sys.exit();

        elif opt in ("-r", "--red") :
            redColor = string_to_int(arg, "--red")
            if (redColor < 0) or (redColor > 255)  :
                print("ERROR: The values of Red-Color is out of range. (min:0  max:255)")
                sys.exit()
            colorList[ColorT.Red] = redColor
                
        elif opt in ("-g", "--green") :
            greenColor = string_to_int(arg, "--green")
            if (greenColor < 0) or (greenColor > 255)  :
                print("ERROR: The values of Green-Color is out of range. (min:0  max:255)")
                sys.exit()
            colorList[ColorT.Green] = greenColor

   
        elif opt in ("-b", "--blue") :
            blueColor = string_to_int(arg, "--blue")
            if (blueColor < 0) or (blueColor > 255)  :
                print("ERROR: The values of Blue-Color is out of range. (min:0  max:255)")
                sys.exit()
            colorList[ColorT.Blue] = blueColor

    print()
    for colorID in ColorT :
        color = colorList[colorID]
        print("%s = %d " % (colorID, colorList[colorID]))
        if color < 0  :
            print("ERROR: The values of %s is out of range. (min:0  max:255)" % colorID)
            sys.exit()

    
    isVerify = ted.PatternScreenVerify(colorList[ColorT.Red], colorList[ColorT.Green], colorList[ColorT.Blue])

    print()
    if isVerify :
        print("Screen Verify OK")
    else :
        print("Screen Verify FAIL")
    print()       

if __name__ == "__main__" :
    main(sys.argv)

