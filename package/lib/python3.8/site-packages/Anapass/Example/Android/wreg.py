
import sys
import ted
import getopt

def print_help() :
    print(" ")
    print("ted.wreg --<option-name>=<options-value> <addr> <value0> <value1> .... <<valueN> ")
    print(" ")
    print("   <options-name>")
    print("       --offset :  Level2 ByteOffset")
    print(" ")
    print("   <addr>")
    print("       register address")
    print("   <value N>")
    print("       register value")
    

def string_to_int(strValue, valueName) : 
    try :
        value=int(strValue, 0)
    except ValueError as err:
        print("ValueError : %s is not Number [%s]" % (valueName,strValue))
        sys.exit()
    return value


def main(argv) :
    
    try :
        # opts : getopt 옵션에 따라 파싱 ex) [('-i', 'myin')]
        # etc_args: getopt 옵션 이외에 입력된 일반 Argument
        # argv 첫번째 (index:0) 는 Python파일명, 두번째 (index:1) 부터  Arguments
        opts, etc_args = getopt.getopt(argv[1:], "hc:o:", ["help", "column=", "offset=" ])
    except getopt.GetoptError:  #옵션지정이 올바르지 않은 경우
        print("ERROR :  the name of option is invalid")
        sys.exit()

    columnValue = 8
    byteOffset = 0

    for opt, arg in opts :

        if opt in ("-h", "--help") :
            print_help()
            sys.exit();
        
        elif opt in ("-o", "--offset") :
            byteOffset = string_to_int(arg, "offset")
            if (byteOffset < 0) or (byteOffset > 1024)  :
                print("ERROR: The values of byteOffset is out of range. (min:0  max:1024)")
                sys.exit()

    argc = len(etc_args)
    if argc <= 1 :
        print("Argument Error :   You have to input <addr> and <value>....")
        print_help()
        exit(0)

    try :
        addr=int(etc_args[0], 0)
    except ValueError as err:
        print("ValueError : The address of register is not number. [%s]"%etc_args[0])
        print_help()
        exit(0)

    valueCount = argc - 1
    regValueList=[0 for _ in range(valueCount)]
    for idx in range(valueCount) : 
        try :
            regValueList[idx] = int(etc_args[1+idx], 0)
        except ValueError as err:
            print("ValueError : The value%d is not number. [%s]"%(idx, etc_args[1+idx]))
            print_help()
            exit(0)

    print("[Addr=0x%02X  Level2ByteOffset=%d  regCount=%d]" %(addr, byteOffset, valueCount))

    dutIdx = 0
    ted.DD_DSIM_MipiWriteReg15(dutIdx, 0xB0, byteOffset)
    bRet = ted.DD_DSIM_MipiWriteReg39(dutIdx, addr, regValueList)
    #bRet = ted.wreg(addr, byteOffset, regValueList)
    if bRet : 
        print("Write OK")
    else :
        print("Write Fail")

if __name__ == "__main__" :
    main(sys.argv)

